@use "./_codex-icons" as icons;

:root {
  --gk-font-size: 0.8rem;
  --gk-line-height: 1.4;
  --gk-gutter-width: 12px;
  --gk-indent: 10px;
  --gk-indicator-width: 2px;
  --gk-background-color: white;

  --gk-theme-color: orange;
  --gk-border-color: lightgrey;
}

@mixin ui-font {
  font-size: smaller;
  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
    Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
}

.gk-font-ui {
  @include ui-font();
}

/* Styling basic code blocks */
figure.gk-code {
  margin-bottom: 10px;
  max-width: 100%;

  overflow: hidden;

  margin: 1rem 0;

  font-size: var(--gk-font-size);

  pre {
    line-height: var(--gk-line-height);
  }
}

/* Styling the title element below a genko code block */
@mixin title {
  padding: 0 var(--gk-gutter-width);
  display: flex;
  overflow: auto hidden;
  position: relative;

  &:after {
    content: " ";
    position: absolute;
    height: 1px;
    left: 0;
    right: 0;
    bottom: 0;
    border-bottom: 1px solid var(--gk-border-color);
    z-index: -1;
  }
}

@mixin title-item {
  cursor: pointer;
  line-height: var(--gk-line-height);
  padding: 0.5em 1em;
  border-style: solid;
  border-width: 2px 1px 1px;
  border-color: transparent;
  white-space: nowrap;
}

@mixin title-item-active {
  border-color: var(--gk-theme-color) var(--gk-border-color)
    var(--gk-background-color) var(--gk-border-color);
}

.gk-code-title {
  @include title();

  > span {
    @include title-item();
    @include title-item-active();
  }
}

/* Styling the description text below a genko code block */
.gk-code-description {
  font-size: smaller;
  line-height: var(--gk-line-height);

  padding: 0.5em var(--gk-gutter-width) 0;
  border-top: 1px solid var(--gk-border-color);
}

/* Styling the code container element that wraps gutter and main display */
.gk-code-container {
  width: 100%;
  display: grid;
  grid-template-columns: var(--gk-gutter-width) 1fr;
  grid-template-rows: 1fr;

  .line {
    display: block;
    height: calc(var(--gk-line-height) * 1em);
  }
}

/* Styling the code gutter element */
.gk-code-gutter {
  font-family: monospace;
  grid-column: 1 / 3;
  grid-row: 1;
  font-size: var(--gk-font-size);
  line-height: var(--gk-line-height);
}

.gk-gutter-line {
  display: grid;
  grid-template-columns: var(--gk-gutter-width) 1fr;
}

.gk-gutter-phantom {
  visibility: hidden;
}

.gk-gutter-item {
  visibility: visible !important;
  background-position: center;
  background-repeat: no-repeat;
  padding-left: var(--gk-gutter-width);
}

.gk-gutter-section {
  &.gk-zip {
    $gutter-item: "> .expandable-content > .gk-gutter-line:first-child > .gk-gutter-item";

    #{$gutter-item} {
      background-image: url(icons.$icon-caret);
      transition: transform 0.2s;
      transform-origin: center;
    }

    &.expandable-hidden #{$gutter-item} {
      transform: rotate(-90deg);
    }
  }

  &.gk-diff-add > .gk-gutter-line > .gk-gutter-item {
    background-image: url(icons.$icon-plus);
  }

  &.gk-diff-del > .gk-gutter-line > .gk-gutter-item {
    background-image: url(icons.$icon-minus);
  }
}

/* Styling the code display element */
.gk-code-display {
  overflow-x: auto;
  grid-column: 2 / 3;
  grid-row: 1;
  z-index: 1;

  br {
    display: none;
  }

  pre {
    width: fit-content;
    min-width: 100%;
  }

  .line {
    padding-left: var(--gk-indent);
  }

  &::-webkit-scrollbar {
    height: 4px;
  }

  &::-webkit-scrollbar-track {
    background-color: transparent;
  }

  &::-webkit-scrollbar-thumb {
    background-color: rgba(#d6dee1, 1);
    border-radius: 4px;
    background-clip: content-box;

    &:hover {
      background-color: #a8bbbf;
    }
  }
}

/* Styling zipped section for display only */
.gk-code-display .gk-zip {
  position: relative;
  width: 100%;
  overflow: hidden;

  &::before {
    content: "\00b7\00b7\00b7 zipped (click to expand) \00b7\00b7\00b7";
    margin-left: var(--gk-indent);
    display: none;
    position: absolute;
    top: 0;
    right: 0;
    left: 0;
    overflow: hidden;
  }

  &.expandable-hidden {
    &::before {
      display: block;
    }

    > .expandable-content {
      opacity: 0;
    }
  }
}

/* Styling the background color of special lines */
@mixin define-line-color($selector, $hue) {
  $saturation: 70%;
  $lightness: 95%;
  #{$selector} {
    background-color: hsl($hue, $saturation, $lightness);
  }
}

@include define-line-color(".gk-hl", 212);
@include define-line-color(".gk-diff-del", 0);
@include define-line-color(".gk-diff-add", 128);

/* Styling the code section wrapper for both gutter and display */
.gk-section {
  display: block;
  position: relative;

  .gk-indicator {
    position: absolute;
    width: var(--gk-indicator-width);
    background-color: var(--border-color);
    left: 0;
    top: 0;
    bottom: 0;

    opacity: 1;
    transition: all 0.2s;
  }

  &:hover,
  &.tooltip-shown {
    > .gk-indicator {
      opacity: 1;
    }
  }
}

/* Styling the tooltip for both gutter and display */
.gk-tooltip {
  width: fit-content;
  white-space: initial;
  word-break: break-all;
  font-size: smaller;
}

.gk-tooltip-wrapper {
  --caret-size: 8px;
  --color: rgba(0, 0, 0, 5%);

  padding: var(--gk-indent);
  margin: calc(var(--caret-size)) 0 0 var(--gk-indicator-width);
  background-color: var(--color);
  position: relative;

  &::before {
    content: " ";
    position: absolute;
    left: calc(2 * var(--caret-size));
    top: calc(-1 * var(--caret-size));
    border-width: var(--caret-size);
    border-style: solid;
    border-color: var(--color) transparent;
    border-top: none;
    font-size: 0;
  }
}

.gk-tooltip-button-group {
  margin-bottom: var(--gk-indent);

  button {
    background-color: transparent;
    border: none;

    &:not(:last-child) {
      margin-right: var(--gk-indent);
    }

    cursor: pointer;

    text-decoration: underline;
    text-transform: uppercase;
    @include ui-font();

    transition: color 0.2s;
    color: #666;
    &:hover {
      color: #000;
    }
  }
}

/* Styling expandable elements, e.g., zippable section or tooltip */
.expandable {
  display: grid;
  grid-template-rows: 1fr;
  transition: grid-template-rows 0.2s ease-out;

  &.expandable-hidden {
    grid-template-rows: 0fr;
  }

  > .expandable-content {
    overflow: hidden;
    min-height: 0;
  }
}

.gk-zip.expandable > .expandable-content {
  min-height: calc(var(--gk-line-height) * 1em);
}

/* Styling unified code */
.gk-unified-code {
  margin: 1rem 0;
  .gk-code {
    margin: 0;
  }

  &.row {
    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: 1fr;

    > .gk-code {
      // ensure each gk-code's content has the same height
      display: grid;
      grid-auto-rows: auto 1fr;

      &:not(:last-child) > .gk-code-container {
        border-right: solid 1px lightgrey;
      }
    }
  }

  &.tab,
  &.diff {
    > .gk-code {
      display: none;
      &.active {
        display: block;
      }
    }
  }
}

.gk-unified-code-switcher {
  position: relative;
  @include title();
  // padding-left: var(--gk-gutter-width);
  // border-bottom: 1px solid var(--gk-border-color);
  // line-height: var(--gk-line-height);
  font-size: var(--gk-font-size);

  > span {
    @include title-item();
    opacity: 0.65;

    transition: all 0.2s;

    &.active,
    &:hover {
      @include title-item-active();
    }
    &.active {
      opacity: 1;
    }
    &.hover {
      opacity: 0.75;
    }
  }
}
